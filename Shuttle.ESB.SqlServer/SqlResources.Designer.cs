//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Shuttle.ESB.SqlServer {
    using System;
    
    
    /// <summary>
    ///   A strongly-typed resource class, for looking up localized strings, etc.
    /// </summary>
    // This class was auto-generated by the StronglyTypedResourceBuilder
    // class via a tool like ResGen or Visual Studio.
    // To add or remove a member, edit your .ResX file then rerun ResGen
    // with the /str option, or rebuild your VS project.
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Resources.Tools.StronglyTypedResourceBuilder", "4.0.0.0")]
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    internal class SqlResources {
        
        private static global::System.Resources.ResourceManager resourceMan;
        
        private static global::System.Globalization.CultureInfo resourceCulture;
        
        [global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode")]
        internal SqlResources() {
        }
        
        /// <summary>
        ///   Returns the cached ResourceManager instance used by this class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Resources.ResourceManager ResourceManager {
            get {
                if (object.ReferenceEquals(resourceMan, null)) {
                    global::System.Resources.ResourceManager temp = new global::System.Resources.ResourceManager("Shuttle.ESB.SqlServer.SqlResources", typeof(SqlResources).Assembly);
                    resourceMan = temp;
                }
                return resourceMan;
            }
        }
        
        /// <summary>
        ///   Overrides the current thread's CurrentUICulture property for all
        ///   resource lookups using this strongly typed resource class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Globalization.CultureInfo Culture {
            get {
                return resourceCulture;
            }
            set {
                resourceCulture = value;
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The connection string used by &apos;{0}&apos; is empty..
        /// </summary>
        internal static string ConnectionStringEmpty {
            get {
                return ResourceManager.GetString("ConnectionStringEmpty", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Could not get count for queue &apos;{0}&apos;.  Exception: {1}.  Query: {2}.
        /// </summary>
        internal static string CountError {
            get {
                return ResourceManager.GetString("CountError", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Could not create queue &apos;{0}&apos;.  Exception: {1}.  Query: {2}.
        /// </summary>
        internal static string CreateError {
            get {
                return ResourceManager.GetString("CreateError", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Could not get count for DeferredMessage table.  Exception: {0}.  Query: {1}.
        /// </summary>
        internal static string DeferredMessageCountError {
            get {
                return ResourceManager.GetString("DeferredMessageCountError", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The database has not been configured for deferred message storage.  Please run the DeferredMessageCreate.sql script file against your database..
        /// </summary>
        internal static string DeferredMessageDatabaseNotConfigured {
            get {
                return ResourceManager.GetString("DeferredMessageDatabaseNotConfigured", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Could not dequeue a deferred message.  Exception: {0}.  Query: {1}.
        /// </summary>
        internal static string DeferredMessageDequeueError {
            get {
                return ResourceManager.GetString("DeferredMessageDequeueError", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Could not enqueue a deferred message.  Exception: {0}.  Query: {1}.
        /// </summary>
        internal static string DeferredMessageEnqueueError {
            get {
                return ResourceManager.GetString("DeferredMessageEnqueueError", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Could not purge DeferredMessage table.  Exception: {0}.  Query: {1}.
        /// </summary>
        internal static string DeferredMessagePurgeError {
            get {
                return ResourceManager.GetString("DeferredMessagePurgeError", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Could not dequeue message from queue &apos;{0}&apos;.  Exception: {1}.  Query: {2}.
        /// </summary>
        internal static string DequeueError {
            get {
                return ResourceManager.GetString("DequeueError", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Could not dequeue message from queue &apos;{0}&apos;.  Exception: {1}.  Query: {2}.
        /// </summary>
        internal static string DequeueIdError {
            get {
                return ResourceManager.GetString("DequeueIdError", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Could not drop queue &apos;{0}&apos;.  Exception: {1}.  Query: {2}.
        /// </summary>
        internal static string DropError {
            get {
                return ResourceManager.GetString("DropError", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Could not find embedded resource script with file name &apos;{0}&apos;..
        /// </summary>
        internal static string EmbeddedScriptMissingException {
            get {
                return ResourceManager.GetString("EmbeddedScriptMissingException", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Could not enqueue message data with message id &apos;{0}&apos; on queue &apos;{1}&apos;.  Exception: {2}.
        /// </summary>
        internal static string EnqueueDataError {
            get {
                return ResourceManager.GetString("EnqueueDataError", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Could not enqueue message id &apos;{0}&apos; on queue &apos;{1}&apos;.  Exception: {2}.
        /// </summary>
        internal static string EnqueueError {
            get {
                return ResourceManager.GetString("EnqueueError", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Could not check whether queue &apos;{0}&apos; exists.  Exception: {1}.  Query: {2}.
        /// </summary>
        internal static string ExistsError {
            get {
                return ResourceManager.GetString("ExistsError", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The database has not been configured for the idempotence service.  Please run the IdempotenceServiceCreate.sql script file against your database..
        /// </summary>
        internal static string IdempotenceDatabaseNotConfigured {
            get {
                return ResourceManager.GetString("IdempotenceDatabaseNotConfigured", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Saga data with id &apos;{0}&apos; for type &apos;{1}&apos; does not implement SagaData..
        /// </summary>
        internal static string InvalidSagaData {
            get {
                return ResourceManager.GetString("InvalidSagaData", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Could not purge queue &apos;{0}&apos;.  Exception: {1}.  Query: {2}.
        /// </summary>
        internal static string PurgeError {
            get {
                return ResourceManager.GetString("PurgeError", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Could not read top {0} messages from queue &apos;{1}&apos;.  Exception: {2}.  Query: {3}.
        /// </summary>
        internal static string ReadError {
            get {
                return ResourceManager.GetString("ReadError", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Could not remove message from queue &apos;{0}&apos;.  Exception: {1}.  Query: {2}.
        /// </summary>
        internal static string RemoveError {
            get {
                return ResourceManager.GetString("RemoveError", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Directory &apos;{0}&apos; was searched (recursively) for script file &apos;{1}&apos;.  Exactly 1 file must exist in the directory structure but {2} were found..
        /// </summary>
        internal static string ScriptCountException {
            get {
                return ResourceManager.GetString("ScriptCountException", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The database has not been configured for subscription storage.  Please run the SubscriptionManagerCreate.sql script file against your database..
        /// </summary>
        internal static string SubscriptionManagerDatabaseNotConfigured {
            get {
                return ResourceManager.GetString("SubscriptionManagerDatabaseNotConfigured", resourceCulture);
            }
        }
    }
}
